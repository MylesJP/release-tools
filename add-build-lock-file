#!/bin/bash -e
# Add a lock file to the charm (assume it is a reactive charm).
# Run in the charm's root directory to obtain the charm name.
# Cleans up afterwards.
# Run AFTER switching the charm to stable libraries (flip-master-libs-to-stable)

_dir="$( cd "$(dirname "${BASH_SOURCE[0]}" )" && pwd)"

charm_type="$(${_dir}/what-is .)"



function update_charmcraft {
    # add in reactive-charm-build-arguments if needed
    grep -q "reactive-charm-build-arguments:" charmcraft.yaml || {
        change="\    reactive-charm-build-arguments:"
        sed -i "/plugin: reactive/a $change" charmcraft.yaml
    }

    # add - --write-lock-file if it is missing
    grep -q "write-lock-file" charmcraft.yaml || {
        change="\      - --write-lock-file\n      - --verbose\n      - --verbose"
        sed -i "/reactive-charm-build-arguments:/a $change" charmcraft.yaml
    }

    # comment out build binary wheels from source to enable the vcs versions of
    # wheels to be discovered.
    sed -i "s/^      - --binary-wheels-from-source/      # - --binary-wheels-from-source/g" charmcraft.yaml
}

case $charm_type in
    source-zaza)
        # Build the charm.
        if [ ! -f src/build.lock ]; then
            # save current charmcraft
            if [ ! -f charmcraft.yaml-orig ]; then
                echo "saving current charmcraft.yaml"
                cp charmcraft.yaml charmcraft.yaml-orig
            else
                echo "resetting to saved charmcraft.yaml-orig"
                cp charmcraft.yaml-orig charmcraft.yaml
            fi
            # update the charmcraft to build the lock file for a reactive charm
            update_charmcraft
            head -n 15 charmcraft.yaml
            # build the charm
            charmcraft clean
            charmcraft -v pack --bases-index=0
            rm ${charm}*.charm
            # extract the build.lock file
            echo "extracting the build.lock file"
            charm=$(grep "charm_build_name" osci.yaml | awk '{print $2}')
            echo $charm
            $_dir/get-build-lock $charm
            echo "restoring charmcraft.yaml"
            cp charmcraft.yaml-orig charmcraft.yaml
            rm charmcraft.yaml-orig
            # temporarily workaround the stable branch detection - charm-tools Bug: #606
            # sed -i "s#refs/heads/master\\\\nrefs/heads/stable/#refs/heads/stable/#g" src/build.lock
            echo "clean up charmcraft"
            charmcraft clean
        else
            echo " .. build.lock already exists"
        fi
        ;;
    *)
        echo " .. Not a reactive charm."
        ;;
esac
